configs:
  vault.hcl:
    content: |
      ui            = true
      cluster_addr  = "https://127.0.0.1:8201"
      api_addr      = "https://127.0.0.1:8200"

      listener "tcp" {
        address       = "0.0.0.0:8200"
        tls_cert_file = "/certs/vault-cert.pem"
        tls_key_file  = "/certs/vault-key.pem"
        tls_min_version = "tls13"
        tls_disable_client_certs = true
      }

services:
  certgen:
    image: eclipse-temurin:17-jre-ubi9-minimal
    volumes:
      - ./certs:/certs
      - ./scripts:/scripts
    entrypoint: ''
    command: sh /scripts/mkcerts.sh

  vault:
    image: hashicorp/vault:1.18
    container_name: vault
    ports:
      - "8200:8200"
    volumes:
      - ./certs:/certs
    cap_add:
      - IPC_LOCK
    configs:
      - vault.hcl
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      # we reroute default dev listener to 8300 because it's unconfigurable
      # actual tcp listener with tls is in the config
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8300"
    command: server -dev -config /vault.hcl
    healthcheck:
      test: >-
        VAULT_ADDR=https://127.0.0.1:8200
        VAULT_TOKEN=root
        VAULT_CACERT=/certs/ca-cert.pem
        vault status
      interval: 5s
    depends_on:
      certgen:
        condition: service_completed_successfully
        # restart ignores `condition`, see https://github.com/docker/compose/issues/12098
        # restart: true

  tf_db_engine:
    extends:
      file: ./common.yml
      service: terraform
    volumes:
      - ./terraform/db_engine:/terraform
    depends_on:
      vault:
        condition: service_healthy
      postgres:
        condition: service_healthy

  tf_pki:
    extends:
      file: ./common.yml
      service: terraform
    volumes:
      - ./terraform/pki:/terraform
    depends_on:
      vault:
        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: example
      POSTGRES_DB: dbtest
    ports:
      - "5432:5432"
    volumes:
      - ./certs:/certs
    command: >-
      -c ssl=on
      -c ssl_cert_file=/certs/postgres-cert.pem
      -c ssl_key_file=/certs/postgres-key.pem
      -c log_connections=on
    healthcheck:
      test: psql -U admin -d dbtest -h localhost -c 'SELECT 1;'
      interval: 30s
      start_interval: 5s
    depends_on:
      tf_pki:
        condition: service_completed_successfully

  app:
    build:
      context: ./app
    container_name: spring-app
    volumes:
      - ./certs:/certs
    environment:
      SPRING_CLOUD_VAULT_URI: https://vault:8200
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/dbtest?sslmode=verify-ca&sslrootcert=/certs/vault-pki-ca.pem
      SPRING_CLOUD_VAULT_SSL_KEYSTORE: file:/certs/app-keystore.jks
    ports:
      - 8080:8080
    healthcheck:
      test: curl -f http://localhost:8080 || exit 1
      interval: 5s
    depends_on:
      vault:
        condition: service_healthy
      postgres:
        condition: service_healthy
      tf_db_engine:
        condition: service_completed_successfully

networks:
  default:
    driver: bridge

